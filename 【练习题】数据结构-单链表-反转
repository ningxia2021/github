/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */

方法1：改变指针指向
struct ListNode* reverseList(struct ListNode* head){

    if(head == NULL){
        return NULL;
    }
    
    struct ListNode* n1 = NULL;
    struct ListNode* n2 = head;
    struct ListNode* n3 = NULL;
    
    while(n2){  
        n3 = n2->next;
       n2->next = n1;
       n1 = n2;
       n2 = n3;
       if(n3){
           n3 = n3->next;
       }
    }
    
    return n1;  
}

方法2：头插法
struct ListNode* reverseList(struct ListNode* head){

    if(head == NULL){
        return NULL;
    }
    
    struct ListNode* cur = head->next;
    struct ListNode* end = head;
    struct ListNode* curnext = NULL;
    
    while(cur){
        curnext = cur->next;
        cur->next = head;
        head = cur;
        cur = curnext;
    }
    
    end->next = NULL;
    
    return head;
}
