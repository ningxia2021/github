-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#include<stdio.h>

void QuickSort(int* arr, int begin, int end);

void swap(int* p1, int* p2) {
	int tem = *p1;
	*p1 = *p2;
	*p2 = tem;
}

void print(int* p3 , int sz) {
	for (size_t i = 0; i < sz; i++)
	{
		printf("%d ",p3[i]);
	}
}

void main() {

	//单趟情况
	int arr[10] = {6,1,2,7,9,3,4,5,10,8};
	//定义开始和结束下标
	int begin = 0;
	int n = sizeof(arr) / sizeof(int);
	int end = n-1;
	QuickSort(arr,begin,end);
	print(arr , n);
}

void QuickSort(int* arr,int begin,int end) {

	if (begin >= end) {
		return;
	}

	int i = begin;
	int key = arr[begin];
	int j = end;
	
	while (i != j) 
	{
		//停下J
		while (arr[j]>key && j > i)
		{
			j--;
		}
		//停下I
		while (arr[i] <= key && j > i)
		{
			i++;
		}
		//交换 arr[i] arr[j]
		swap(&arr[i],&arr[j]);
	}
	
	//相遇
	swap(&arr[i], &arr[begin]);

	//i这个点的值 确定好了；
	//关注i左 和i右
	QuickSort(arr, begin, i-1);
	
	QuickSort(arr, i+1 , end);
	}
